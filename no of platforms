#include <iostream>
#include<vector>
#include<algorithm>

using namespace std;

int findminp(vector<int> &arrival,vector<int> &dep){
    sort(arrival.begin(),arrival.end());
    sort(dep.begin(),dep.end());
    int n=arrival.size();
    int p_need=0,max_p=0;
    int i=0,j=0;
   
    while(i<n&&j<n){
        if(arrival[i]<=dep[j]){
            p_need++;
            i++;
        }
        else{
            p_need--;
            j++;
        }
        max_p=max(max_p,p_need);
    }
    return max_p;
}
int main(){
    int n;
    cout << "Enter the number of trains: ";
    cin >> n;
    vector<int> arrival(n), dep(n);
    cout << "Enter the arrival times: ";
    for (int i = 0; i < n; i++) {
        cin >> arrival[i];
    }
    cout << "Enter the departure times: ";
    for (int i = 0; i < n; i++) {
        cin >> dep[i];
    }
    int result = findminp(arrival, dep);
    cout << "Minimum number of platforms required: " << result << endl;

    return 0;
}
